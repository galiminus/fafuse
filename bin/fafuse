#!/usr/bin/ruby

require "rfuse"
require "rest-client"
require "nokogiri"
require "pathname"
require "byebug"

require "fafuse/all"

class FAFuse::Fuse
  RESOURCES = [
    FAFuse::Root,
    FAFuse::User,
    FAFuse::Gallery,
    FAFuse::Picture
  ]

  def initialize
  end

  # The new readdir way, c+p-ed from getdir
  def readdir(ctx, path, filler, offset, ffi)
    RESOURCES.each do |resource|
      if resource.match?(path)
        object = resource.new(path)
        if object.valid?
          object.content.each do |subdirectory|
            filler.push(subdirectory, getattr(nil, Pathname.new(path).join(subdirectory).to_s), 0)
          end
          return
        else
          raise Errno::ENOENT.new(path)
        end
      end
    end
  end

  def getattr(ctx, path)
    RESOURCES.each do |resource|
      if resource.match?(path)
        object = resource.new(path)
        if object.valid?
          return object.stat
        else
          raise Errno::ENOENT.new(path)
        end
      end
    end
    raise Errno::ENOENT.new(path)
  end

  def open(ctx, path, ffi)
    puts "OPEN", path
  end

  def read(ctx,path,size,offset,fi)
    puts "READ", path
    d = @root.search(path)
    if (d.isdir)
      raise Errno::EISDIR.new(path)
      return nil
    else
      return d.content[offset..offset + size - 1]
    end
  end

  # Some random numbers to show with df command
  def statfs(ctx, path)
    s = RFuse::StatVfs.new()
    s.f_bsize    = 1024
    s.f_frsize   = 1024
    s.f_blocks   = 1000000
    s.f_bfree    = 500000
    s.f_bavail   = 990000
    s.f_files    = 10000
    s.f_ffree    = 9900
    s.f_favail   = 9900
    s.f_fsid     = 23423
    s.f_flag     = 0
    s.f_namemax  = 10000
    return s
  end

  def poll(ctx, path, ffi, ph, reventsp)
    ph.notifyPoll();
  end

  def init(ctx, rfuseconninfo)
  end

end

RFuse.main(ARGV) { fs = FAFuse::Fuse.new() }
